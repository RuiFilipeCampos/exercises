%% create signals
n  = 0:255;
xo = RuiCampos_TP5_signalObj(n, 0.2*n.*exp(-0.03*n));
rA = RuiCampos_TP5_signalObj(n, (cos(0.81*pi*n) + cos(0.85*pi*n)...
                               + cos(0.91*pi*n) + cos(0.95*pi*n)) / 4);
          
xA = RuiCampos_TP5_signalObj(n, xo.x + rA.x); 
SIGNALS = [xo, xA];

xA.error = norm(xA.x-xo.x,2)/norm(xo.x,2);
%load("RuiCampos_TP5_C2_filtros")
%% criaçao do filtro - Generated by MATLAB(R) 9.4 and Signal Processing Toolbox 8.0.
% All frequency values are normalized to 1.

Fpass = 0.2;         % Passband Frequency
Fstop = 0.8;         % Stopband Frequency
Apass = 1;           % Passband Ripple (dB)
Astop = 80;          % Stopband Attenuation (dB)
match = 'stopband';  % Band to match exactly

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.lowpass(Fpass, Fstop, Apass, Astop);
LP = design(h, 'butter', 'MatchExactly', match);
%% filter
figure('Name','Filtro Usado')
[num,den] = RuiCampos_TP5_C2_plotFlter(LP, xA.w, 1);

vectorFor_xAfilt = filter(num,den,xA.x);
xAfilt           = RuiCampos_TP5_signalObj(n, vectorFor_xAfilt);

xAfilt.error = norm(xAfilt.x-xo.x,2)/norm(xo.x,2);
%% ideal filter
xA_fft_cut = [xA.fft(1:256/4)     ,...
              zeros(1, 256/2-1)   ,...
              xA.fft(256*3/4:256)];

xAfilt_ideal = RuiCampos_TP5_signalObj(n, ifft(xA_fft_cut));
xAfilt_ideal.fft_abs = log10(abs(xA_fft_cut));

xAfilt_ideal.error = norm(xAfilt_ideal.x-xo.x, 2)/norm(xo.x,2);
%% plot
figure('Name', 'Resultados')
subplot(2,2,1),xo.plot, title('Sinal Original')
subplot(2,2,2),xA.plot, title("Sinal com Ruído ER = " + string(xA.error))
subplot(2,2,3),xAfilt_ideal.plot
title("Sinal Filtrado c/ LP ideal ER = " + string(xAfilt_ideal.error))

subplot(2,2,4),xAfilt.plot
title("Sinal Filtrado c/ Butter ER = " + string(xAfilt.error))